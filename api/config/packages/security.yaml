security:
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    providers:
        user_provider:
            entity:
                class: App\Admin\Core\Entity\User
    firewalls:
        # Profiler
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        # API Firewall
        main:
            security: true
            lazy: true
            stateless: true
            pattern: ^/(v1|v2)/(auth|main|user|admin)
            provider: user_provider
            access_token:
                token_handler: App\Admin\Core\Security\AccessTokenHandler
            user_checker: App\Admin\Core\Security\UserChecker
            switch_user: {
                role: CAN_SWITCH_USER,
                parameter: Switch-User
            }
            json_login:
                check_path: api_login
                failure_handler: App\Admin\Core\Security\JsonFailureHandler

    access_control:
        # Auth
        - { path: ^/(v1|v2)/auth, roles: PUBLIC_ACCESS }

        # Global
        - { path: ^/(v1|v2)/main, roles: [ROLE_USER, ROLE_ADMIN] }

        # Client
        - { path: ^/(v1|v2)/client, roles: ROLE_USER }

        # Admin
        - { path: ^/(v1|v2)/admin, roles: ROLE_ADMIN }

when@test:
    security:
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: 'plaintext'