name: App Deploy Staging
on:
  push:
    branches: [ staging ]

env:
  registry: ghcr.io
  app_image: ghcr.io/${{ github.repository }}:staging
  ssh_username: root
  ssh_privatekey: ${{ secrets.SERVER_PRIVATEKEY }}
  ssh_hosts: ${{ join(fromJSON(vars.STAG_HOSTS)) }}
  cmd_host: ${{ fromJSON(vars.STAG_HOSTS)[0] }}
  app_envs: ${{ join(fromJSON(vars.STAG_ENVS), '\n') }}

jobs:
  build:
    # Configuration
    name: Image Build & Push GHCR
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write

    # Steps
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.registry }}
          username: ${{ github.actor }}
          password: ${{ secrets.ACCESS_TOKEN }}
      - name: Build & Push
        uses: docker/build-push-action@v3
        with:
          context: ./api
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ env.app_image }}
          labels: org.opencontainers.image.source="${{ github.event.repository.clone_url }}"

  deploy:
    # Configuration
    needs: build
    name: Deploy to Servers
    runs-on: ubuntu-22.04
    permissions:
      packages: read

    # Steps
    steps:
      - name: Stop Servers && Update Images
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ env.ssh_hosts }}
          username: ${{ env.ssh_username }}
          key: ${{ env.ssh_privatekey }}
          sync: true
          script: |
            echo ${{ secrets.ACCESS_TOKEN }} | docker login ${{ env.registry }} -u ${{ github.actor }} --password-stdin
            docker stop -t 120 mainapp || true && docker rm mainapp || true
            docker pull ${{ env.app_image }}
      - name: Run App Commands
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ env.cmd_host }}
          username: ${{ env.ssh_username }}
          key: ${{ env.ssh_privatekey }}
          script: |
            docker run --name postgres \ 
              -e POSTGRES_PASSWORD=postgres2315 \
              -v /var/lib/postgresql/data:/var/lib/postgresql/data \ 
              -d postgres || true
            docker run --rm ${{ env.app_image }} sh -c "bin/console doctrine:schema:update --force" || true
      - name: Start Servers
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ env.ssh_hosts }}
          username: ${{ env.ssh_username }}
          key: ${{ env.ssh_privatekey }}
          sync: true
          script: |
            echo -e "${{ env.app_envs }}" > .env
            docker run -d -p 80:80 --name mainapp --restart always --env-file .env --log-opt max-size=1g ${{ env.app_image }}
            docker rmi $(docker images -q -f 'dangling=true') || true